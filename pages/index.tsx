import React, { useEffect } from 'react';
import Container from '@material-ui/core/Container';
import Grid from '@material-ui/core/Grid';
import type { InferGetStaticPropsType, NextPage } from 'next';
import Head from 'next/head';
import { GetStaticProps } from 'next';

import { API_URL } from '../src/utils/constants';

import { useRouter } from 'next/router';
import { IProfile } from '../lib/state/profileContext/types';
import { useProfile } from '../lib/state';
import { Profile } from '../src/components';
import { setLocalStorageItem } from '../src/utils/helper';

const Home: NextPage = (
  props: InferGetStaticPropsType<typeof getStaticProps>
) => {
  const { push } = useRouter();
  const { profiles, setProfile, setProfiles } = useProfile();

  /**
   * Effects
   */
  useEffect(() => {
    if (props?.profiles && setProfiles) {
      setProfiles(props?.profiles ?? []);
      setLocalStorageItem('profiles', { profiles: props?.profiles ?? [] });
    }
  }, [props.profiles]);

  /**
   * Handlers
   */
  const handleProfileView = (profile: IProfile) => {
    if (profile && setProfile) {
      setProfile(profile);
      setLocalStorageItem('profile', profile);
      push(`/profile/${profile.id.name}`);
    }
  };

  return (
    <Container>
      <Head>
        <title>Profiles</title>
        <meta
          name="A Sweep south assessment"
          content="Generated by create next app"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Grid container spacing={2}>
        {profiles?.map((profile: any, index: number) => {
          return (
            <Grid
              key={index}
              item
              xs={12}
              sm={6}
              md={4}
              lg={3}
              onClick={() => handleProfileView(profile)}
            >
              <Profile profile={profile} />
            </Grid>
          );
        })}
      </Grid>
    </Container>
  );
};

export const getStaticProps: GetStaticProps = async (context) => {
  const request = await fetch(`${API_URL}/profiles`, { method: 'GET' });
  const response = await request.json();

  return {
    props: {
      profiles: response?.results ?? [],
    },
  };
};

export default Home;
